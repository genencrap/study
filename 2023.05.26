numpy를 이용한 2레이어 인공신경망 구현
-> 논리회로 XOR문제

1) 어파인 변환 연산과 시그모이드 활성화 함수
affine transform : 가중치 매트릭스인W를 곱하고(선형변환) 여기에 바이어스인 B를 더하는 연산. 변환결과는 원점이
이동된(바이어스 덧셈연산으로 인해) 선형변환.
비선형 활성함수 : 어파인 변환된 결과에 비선형 연산을 추가. 어파인 변환으로는 XOR같은 직선으로 나눌 수 없는 분류 문제를
풀어내는데 한계가 있다. 비선형 변환을 통해 입력을 선형분리 가능한 형태로 변환 시켜줘야 한다.

이 두 개의 연산이 뉴럴네트워크 레이어 하나를 구성. 레이어를 쌓게되면 계속 어파인 변환과 비선형 변환을 통해 복잡한 형태의
공간도 표현할 수 있게 된다.

어파인 변환 함수 : W**T *X + B
시그모이드 함수 : 1/(1+ e*(-z))

2)손실함수 만들기:이진 크로스 엔트로피
모델을 학습시키기 위해 모델이 출력하는 예측값과 실제 정답이 얼마나 차이가 있는지를 측정하는 손실함수가 필요.
함수값을 줄이는 방향으로 파라미터 업데이트.
현재 문제에서는 0,1 즉 2개의 부류를 구분하는 이진 크로스엔트로피 손실함수 구현
binary cross entropy(y,yhat) = -1/N(sigma i=0~n)(yi * log(yhati)+(1-yi)*log(1-yhati))
yi = i번째 정답 값(0 or 1)
yhati = i번째 추정값(0<yhat<1)
log : 자연로그
N : 샘플의 수

3)2레이어 뉴럴네트워크 순방항 연산 구현
W1, B1, W2, B2 = _params
    1. affine함수 //첫번째 레이어
    2. sigmoid함수  // 첫번째 레이어
    3. affine함수 //두번째 레이어
    4. sigmoid함수 //두번째 레이어
    5.이진크로스엔트로피함수 // 손실함수 계산
return Z1, H, Z2, YHat, loss
4)2레이어 뉴렬네트워크 역방향 그레디언트 계산하기
역전파 구하기
m = X.shape[1] //샘플의 수
    1.dloss/dZ2
    2.dloss/dW2
    3.dloss/dB2
    4.dloss/dH
    5.dloss/dZ1
    6.dloss/dW1
return dldw1, dldb1, dldw2, dldb2, loss
